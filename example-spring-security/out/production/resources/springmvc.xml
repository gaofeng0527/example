<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:application.properties"/>

    <!-- 配置自动扫描包路径  控制器 -->
    <context:component-scan base-package="com.spring"/>
    <!-- 注解映射 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- StringHttpMessageConverter 继承abstractHttpMessageConverter：当客户端发送请求报文到springmvc或者从springmvc响应报文到客户端
             中间会有一个报文转换成java对象的过程。如果不设置编码的话，会默认使用系统默认编码 'ISO-8859-1'-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--
                @ResponseBody,@RequestBody注解在解析对象时，默认使用的是jackson来解析json
                现在替换成FastJsonHttpMessageConverter
             -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="fastJsonConfig">
                    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                        <property name="features">
                            <list>
                                <value>AllowArbitraryCommas</value>
                                <value>AllowUnQuotedFieldNames</value>
                                <value>DisableCircularReferenceDetect</value>
                            </list>
                        </property>
                        <property name="serializerFeatures">
                            <list>
                                <value>BrowserCompatible</value><!-- ，加上它以后，中文会被转义解决JS不支持Long类型：Long输出为字符串 -->
                            </list>
                        </property>
                        <!-- 时间类型转换 -->
                        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
                    </bean>
                </property>

            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 集成 thymeleaf -->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=".html"/>
        <property name="cacheable" value="${thymeleafCacheable}"/>
    </bean>

    <!-- 如果要在thymeleaf 页面中使用springsecurity方言的话，需要在引擎中注册springsecuritydialect -->
    <bean id="springSecurityDialect" class="org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect"/>

    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="additionalDialects" ref="springSecurityDialect"/>
    </bean>

    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 静态资源的访问，如 js, css, jpg, png -->
    <!-- 如 HTML 里访问 /static/js/foo.js, 则实际访问的是 /WEB-INF/static/js/foo.js -->
    <mvc:resources mapping="/static/js/**"   location="/WEB-INF/static/js/"   cache-period="31556926"/>
    <mvc:resources mapping="/static/lib/**"  location="/WEB-INF/static/lib/"  cache-period="31556926"/>
    <mvc:resources mapping="/static/css/**"  location="/WEB-INF/static/css/"  cache-period="31556926"/>
    <mvc:resources mapping="/static/img/**"  location="/WEB-INF/static/img/"  cache-period="31556926"/>
    <mvc:resources mapping="/static/html/**" location="/WEB-INF/static/html/" cache-period="31556926"/>

</beans>